/*
! tailwindcss v3.4.10 | MIT License | https://tailwindcss.com
*/

/*
1. Evitar que o padding e a borda afetem a largura do elemento.
2. Permitir adicionar uma borda ao elemento apenas adicionando a largura da borda.
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

/* Define conteúdo vazio para ::before e ::after */
::before,
::after {
  --tw-content: ""; /* Variável para conteúdo */
}

/*
1. Usar uma linha de altura consistente em todos os navegadores.
2. Prevenir ajustes do tamanho da fonte após mudanças de orientação no iOS.
3. Usar um tamanho de tabulação mais legível.
4. Usar a fonte sans configurada pelo usuário como padrão.
5. Usar as configurações de características de fonte configuradas pelo usuário por padrão.
6. Usar as configurações de variação de fonte configuradas pelo usuário por padrão.
7. Desabilitar destaques de toque no iOS.
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: Poppins, sans-serif; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remover a margem em todos os navegadores.
2. Herdar a linha de altura do `html` para que os usuários possam defini-las como uma classe diretamente no elemento `html`.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/* Estilo para a tabela do carrinho */
.cart-table {
  width: 100%; /* Tabela ocupa toda a largura disponível */
  border-collapse: inherit; /* Colapsar bordas de células */
}

.cart-table th,
.cart-table td {
  border: 1px solid #ddd; /* Borda cinza clara */
  padding: 1px; /* Espaçamento interno */
  text-align: center; /* Alinhamento centralizado */
}

.cart-table th {
  background-color: #f2f2f2; /* Cor de fundo dos cabeçalhos */
}

/* Estilo para botões na tabela do carrinho */
.cart-table button {
  margin: 0 5px; /* Margem lateral */
  padding: 1px 10px; /* Tamanho do botão */
  background-color: black; /* Cor de fundo */
  color: white; /* Cor do texto */
  border: none; /* Remove borda padrão */
  cursor: pointer; /* Indica que é clicável */
}

/* Efeito de hover nos botões */
.cart-table button:hover {
  background-color: rgb(235, 143, 4); /* Cor ao passar o mouse */
}

/* Estilos para botões de quantidade */
.button-quantity {
  background-color: black; /* Cor de fundo */
  color: white; /* Cor do texto */
  padding: 1px 1px; /* Tamanho do botão */
  border: none; /* Remove borda */
  border-radius: 5px; /* Bordas arredondadas */
  cursor: pointer; /* Indica que é clicável */
  transition: background-color 0.2s, transform 0.1s; /* Animações */
  margin: 0 3px; /* Espaçamento entre botões */
}

.button-quantity:hover {
  background-color: rgb(235, 143, 4); /* Cor ao passar o mouse */
  transform: scale(1.05); /* Aumenta levemente ao passar o mouse */
}

/* Estilos para o modal do carrinho */
#cart-modal > div {
  max-width: 1000px; /* Limita a largura do modal */
  margin: auto; /* Centraliza o modal */
  border-radius: 8px; /* Bordas arredondadas */
}

#cart-modal {
  overflow-y: auto; /* Permite rolagem vertical */
  max-height: 100vh; /* Limita a altura do modal */
}

#cart-items3 {
  max-height: 50vh; /* Limita a altura dos itens do carrinho */
  overflow-y: auto; /* Permite rolagem */
}

/*
1. Adicionar a altura correta no Firefox.
2. Corrigir a herança da cor da borda no Firefox.
3. Garantir que regras horizontais sejam visíveis por padrão.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/* Estilo para abreviações com título */
abbr:where([title]) {
  -webkit-text-decoration: underline dotted; /* Sublinhado pontilhado */
  text-decoration: underline dotted; /* Sublinhado pontilhado */
}

/* Remover tamanho e peso de fonte padrão para cabeçalhos */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit; /* Herdar tamanho da fonte */
  font-weight: inherit; /* Herdar peso da fonte */
}

/* Resetar links para estilização otimizada */
a {
  color: inherit; /* Herdar cor */
  text-decoration: inherit; /* Herdar decoração */
}

/* Estilo para negrito */
b,
strong {
  font-weight: bolder; /* Aumentar peso */
}

/*
1. Usar a fonte mono configurada pelo usuário como padrão.
2. Usar as configurações de características de fonte mono configuradas pelo usuário.
3. Usar as configurações de variação de fonte mono configuradas pelo usuário.
4. Corrigir o tamanho de fonte em todas as navegadores.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/* Ajustar tamanho da fonte para pequenos textos */
small {
  font-size: 80%; /* Tamanho menor */
}

/* Prevenir que elementos sub e sup afetem a altura da linha */
sub,
sup {
  font-size: 75%; /* Reduzir tamanho */
  line-height: 0; /* Não afetar altura da linha */
  position: relative; /* Posicionamento relativo */
  vertical-align: baseline; /* Alinhamento na linha base */
}

sub {
  bottom: -0.25em; /* Alinhar subscript */
}

sup {
  top: -0.5em; /* Alinhar superscript */
}

/*
1. Remover indentação de texto em conteúdos de tabelas.
2. Corrigir a herança da cor da borda em tabelas.
3. Remover gaps entre bordas de tabelas.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Alterar estilos de fonte em todos os navegadores.
2. Remover margem em Firefox e Safari.
3. Remover padding padrão em todos os navegadores.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/* Remover herança de transformação de texto em Edge e Firefox */
button,
select {
  text-transform: none; /* Sem transformação de texto */
}

/*
1. Corrigir a incapacidade de estilizar tipos clicáveis no iOS e Safari.
2. Remover estilos padrão de botões.
*/

button,
input:where([type="button"]),
input:where([type="reset"]),
input:where([type="submit"]) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/* Estilo de foco para todos os elementos focáveis */
:-moz-focusring {
  outline: auto; /* Estilo de contorno automático */
}

/* Remover estilos adicionais :invalid no Firefox */
:-moz-ui-invalid {
  box-shadow: none; /* Sem sombra */
}

/* Correção de alinhamento vertical em Chrome e Firefox */
progress {
  vertical-align: baseline; /* Alinhamento na linha base */
}

/* Correção do estilo do cursor em botões de incremento e decremento no Safari */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; /* Altura automática */
}

/*
1. Corrigir a aparência estranha no Chrome e Safari.
2. Corrigir o estilo de contorno no Safari.
*/

[type="search"] {
  -webkit-appearance: textfield; /* Aparência de campo de texto */
  outline-offset: -2px; /* Ajuste de contorno */
}

/* Remover padding interno em Chrome e Safari no macOS */
::-webkit-search-decoration {
  -webkit-appearance: none; /* Sem aparência padrão */
}

/*
1. Corrigir a incapacidade de estilizar tipos clicáveis no iOS e Safari.
2. Alterar propriedades de fonte para 'inherit' no Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* Estilo de botão */
  font: inherit; /* Herdar fonte */
}

/* Adicionar exibição correta no Chrome e Safari */
summary {
  display: list-item; /* Exibição como item de lista */
}

/* Remover espaçamento e borda padrão para elementos apropriados */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0; /* Sem margem */
}

fieldset {
  margin: 0; /* Sem margem */
  padding: 0; /* Sem padding */
}

legend {
  padding: 0; /* Sem padding */
}

ol,
ul,
menu {
  list-style: none; /* Sem estilo de lista */
  margin: 0; /* Sem margem */
  padding: 0; /* Sem padding */
}

/* Resetar estilo padrão para diálogos */
dialog {
  padding: 0; /* Sem padding */
}

/* Prevenir redimensionamento de textareas horizontalmente */
textarea {
  resize: vertical; /* Apenas vertical */
}

/*
1. Resetar a opacidade padrão do placeholder no Firefox.
2. Definir a cor padrão do placeholder para a cor cinza 400 configurada pelo usuário.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/* Definir o cursor padrão para botões */
button,
[role="button"] {
  cursor: pointer; /* Indica que é clicável */
}

/* Garantir que botões desativados não tenham cursor de ponteiro */
:disabled {
  cursor: default; /* Cursor padrão */
}

/*
1. Fazer elementos substituídos 'display: block' por padrão.
2. Adicionar 'vertical-align: middle' para alinhar elementos substituídos de forma mais sensata.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/* Constranger imagens e vídeos à largura do pai e preservar a proporção intrínseca */
img,
video {
  max-width: 100%; /* Limita a largura */
  height: auto; /* Altura automática para manter proporção */
}

/* Fazer elementos com o atributo HTML hidden permanecerem ocultos por padrão */


/* 
1. Oculta elementos que têm o atributo "hidden" (não são exibidos na página).
*/
[hidden] {
  display: none; /* O elemento não ocupa espaço na página */
}

/*
Define variáveis CSS personalizadas (custom properties) para uso geral. 
Essas variáveis são usadas pelo Tailwind CSS para facilitar a aplicação de estilos 
e manter a consistência ao longo do projeto.
*/
*,
::before,
::after {
  --tw-border-spacing-x: 0; /* Espaçamento horizontal entre bordas */
  --tw-border-spacing-y: 0; /* Espaçamento vertical entre bordas */
  --tw-translate-x: 0; /* Translação no eixo X */
  --tw-translate-y: 0; /* Translação no eixo Y */
  --tw-rotate: 0; /* Rotação */
  --tw-skew-x: 0; /* Inclinação no eixo X */
  --tw-skew-y: 0; /* Inclinação no eixo Y */
  --tw-scale-x: 1; /* Escala no eixo X */
  --tw-scale-y: 1; /* Escala no eixo Y */
  --tw-pan-x: ; /* Panorâmica no eixo X (sem valor definido) */
  --tw-pan-y: ; /* Panorâmica no eixo Y (sem valor definido) */
  --tw-pinch-zoom: ; /* Zoom por pinça (sem valor definido) */
  --tw-scroll-snap-strictness: proximity; /* Estrita proximidade para scroll snap */
  --tw-gradient-from-position: ; /* Posição inicial do gradiente (sem valor definido) */
  --tw-gradient-via-position: ; /* Posição intermediária do gradiente (sem valor definido) */
  --tw-gradient-to-position: ; /* Posição final do gradiente (sem valor definido) */
  --tw-ordinal: ; /* Estilo ordinal (sem valor definido) */
  --tw-slashed-zero: ; /* Zero cortado (sem valor definido) */
  --tw-numeric-figure: ; /* Estilo numérico (sem valor definido) */
  --tw-numeric-spacing: ; /* Espaçamento numérico (sem valor definido) */
  --tw-numeric-fraction: ; /* Fração numérica (sem valor definido) */
  --tw-ring-inset: ; /* Inseto da borda de anel (sem valor definido) */
  --tw-ring-offset-width: 0px; /* Largura do deslocamento do anel */
  --tw-ring-offset-color: #fff; /* Cor de deslocamento do anel */
  --tw-ring-color: rgb(59 130 246 / 0.5); /* Cor do anel (translúcido) */
  --tw-ring-offset-shadow: 0 0 #0000; /* Sombra de deslocamento do anel (sem sombra) */
  --tw-ring-shadow: 0 0 #0000; /* Sombra do anel (sem sombra) */
  --tw-shadow: 0 0 #0000; /* Sombra padrão (sem sombra) */
  --tw-shadow-colored: 0 0 #0000; /* Sombra colorida (sem sombra) */
  --tw-blur: ; /* Desfoque (sem valor definido) */
  --tw-brightness: ; /* Brilho (sem valor definido) */
  --tw-contrast: ; /* Contraste (sem valor definido) */
  --tw-grayscale: ; /* Escala de cinza (sem valor definido) */
  --tw-hue-rotate: ; /* Rotação de matiz (sem valor definido) */
  --tw-invert: ; /* Inversão de cores (sem valor definido) */
  --tw-saturate: ; /* Saturação (sem valor definido) */
  --tw-sepia: ; /* Efeito sépia (sem valor definido) */
  --tw-drop-shadow: ; /* Sombra projetada (sem valor definido) */
  --tw-backdrop-blur: ; /* Desfoque do fundo (sem valor definido) */
  --tw-backdrop-brightness: ; /* Brilho do fundo (sem valor definido) */
  --tw-backdrop-contrast: ; /* Contraste do fundo (sem valor definido) */
  --tw-backdrop-grayscale: ; /* Escala de cinza do fundo (sem valor definido) */
  --tw-backdrop-hue-rotate: ; /* Rotação de matiz do fundo (sem valor definido) */
  --tw-backdrop-invert: ; /* Inversão de cores do fundo (sem valor definido) */
  --tw-backdrop-opacity: ; /* Opacidade do fundo (sem valor definido) */
  --tw-backdrop-saturate: ; /* Saturação do fundo (sem valor definido) */
  --tw-backdrop-sepia: ; /* Efeito sépia do fundo (sem valor definido) */
  --tw-contain-size: ; /* Tamanho de contenção (sem valor definido) */
  --tw-contain-layout: ; /* Layout de contenção (sem valor definido) */
  --tw-contain-paint: ; /* Pintura de contenção (sem valor definido) */
  --tw-contain-style: ; /* Estilo de contenção (sem valor definido) */
}

/* 
Define variáveis para o backdrop (fundo) de elementos que utilizam um backdrop, 
como diálogos e modais. 
As variáveis seguem o mesmo padrão de uso que as acima.
*/
::backdrop {
  --tw-border-spacing-x: 0; /* Espaçamento horizontal entre bordas */
  --tw-border-spacing-y: 0; /* Espaçamento vertical entre bordas */
  --tw-translate-x: 0; /* Translação no eixo X */
  --tw-translate-y: 0; /* Translação no eixo Y */
  --tw-rotate: 0; /* Rotação */
  --tw-skew-x: 0; /* Inclinação no eixo X */
  --tw-skew-y: 0; /* Inclinação no eixo Y */
  --tw-scale-x: 1; /* Escala no eixo X */
  --tw-scale-y: 1; /* Escala no eixo Y */
  --tw-pan-x: ; /* Panorâmica no eixo X (sem valor definido) */
  --tw-pan-y: ; /* Panorâmica no eixo Y (sem valor definido) */
  --tw-pinch-zoom: ; /* Zoom por pinça (sem valor definido) */
  --tw-scroll-snap-strictness: proximity; /* Estrita proximidade para scroll snap */
  --tw-gradient-from-position: ; /* Posição inicial do gradiente (sem valor definido) */
  --tw-gradient-via-position: ; /* Posição intermediária do gradiente (sem valor definido) */
  --tw-gradient-to-position: ; /* Posição final do gradiente (sem valor definido) */
  --tw-ordinal: ; /* Estilo ordinal (sem valor definido) */
  --tw-slashed-zero: ; /* Zero cortado (sem valor definido) */
  --tw-numeric-figure: ; /* Estilo numérico (sem valor definido) */
  --tw-numeric-spacing: ; /* Espaçamento numérico (sem valor definido) */
  --tw-numeric-fraction: ; /* Fração numérica (sem valor definido) */
  --tw-ring-inset: ; /* Inseto da borda de anel (sem valor definido) */
  --tw-ring-offset-width: 0px; /* Largura do deslocamento do anel */
  --tw-ring-offset-color: #fff; /* Cor de deslocamento do anel */
  --tw-ring-color: rgb(59 130 246 / 0.5); /* Cor do anel (translúcido) */
  --tw-ring-offset-shadow: 0 0 #0000; /* Sombra de deslocamento do anel (sem sombra) */
  --tw-ring-shadow: 0 0 #0000; /* Sombra do anel (sem sombra) */
  --tw-shadow: 0 0 #0000; /* Sombra padrão (sem sombra) */
  --tw-shadow-colored: 0 0 #0000; /* Sombra colorida (sem sombra) */
  --tw-blur: ; /* Desfoque (sem valor definido) */
  --tw-brightness: ; /* Brilho (sem valor definido) */
  --tw-contrast: ; /* Contraste (sem valor definido) */
  --tw-grayscale: ; /* Escala de cinza (sem valor definido) */
  --tw-hue-rotate: ; /* Rotação de matiz (sem valor definido) */
  --tw-invert: ; /* Inversão de cores (sem valor definido) */
  --tw-saturate: ; /* Saturação (sem valor definido) */
  --tw-sepia: ; /* Efeito sépia (sem valor definido) */
  --tw-drop-shadow: ; /* Sombra projetada (sem valor definido) */
  --tw-backdrop-blur: ; /* Desfoque do fundo (sem valor definido) */
  --tw-backdrop-brightness: ; /* Brilho do fundo (sem valor definido) */
  --tw-backdrop-contrast: ; /* Contraste do fundo (sem valor definido) */
  --tw-backdrop-grayscale: ; /* Escala de cinza do fundo (sem valor definido) */
  --tw-backdrop-hue-rotate: ; /* Rotação de matiz do fundo (sem valor definido) */
  --tw-backdrop-invert: ; /* Inversão de cores do fundo (sem valor definido) */
  --tw-backdrop-opacity: ; /* Opacidade do fundo (sem valor definido) */
  --tw-backdrop-saturate: ; /* Saturação do fundo (sem valor definido) */
  --tw-backdrop-sepia: ; /* Efeito sépia do fundo (sem valor definido) */
  --tw-contain-size: ; /* Tamanho de contenção (sem valor definido) */
  --tw-contain-layout: ; /* Layout de contenção (sem valor definido) */
  --tw-contain-paint: ; /* Pintura de contenção (sem valor definido) */
  --tw-contain-style: ; /* Estilo de contenção (sem valor definido) */
}


.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.\!visible {
  visibility: visible !important;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-inset-1 {
  inset: -0.25rem;
}

.bottom-0 {
  bottom: 0px;
}

.end-1 {
  inset-inline-end: 0.25rem;
}

.left-0 {
  left: 0px;
}

.top-0 {
  top: 0px;
}

.isolate {
  isolation: isolate;
}

.isolation-auto {
  isolation: auto;
}

.z-40 {
  z-index: 40;
}

.z-\[99\] {
  z-index: 99;
}

.float-start {
  float: inline-start;
}

.float-end {
  float: inline-end;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.float-none {
  float: none;
}

.clear-start {
  clear: inline-start;
}

.clear-end {
  clear: inline-end;
}

.clear-left {
  clear: left;
}

.clear-right {
  clear: right;
}

.clear-both {
  clear: both;
}

.clear-none {
  clear: none;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.mb-16 {
  margin-bottom: 4rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.mt-9 {
  margin-top: 2.25rem;
}

.box-border {
  box-sizing: border-box;
}

.box-content {
  box-sizing: content-box;
}

.line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: none;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.h-28 {
  height: 7rem;
}

.h-32 {
  height: 8rem;
}

.h-\[420px\] {
  height: 420px;
}

.h-full {
  height: 100%;
}

.w-28 {
  width: 7rem;
}

.w-32 {
  width: 8rem;
}

.w-\[this-is\\\\\] {
  width: this-is\\;
}

.w-\[this-is\] {
  width: this-is;
}

.w-\[weird-and-invalid\] {
  width: weird-and-invalid;
}

.w-full {
  width: 100%;
}

.min-w-\[90\%\] {
  min-width: 90%;
}

.max-w-7xl {
  max-width: 80rem;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.table-auto {
  table-layout: auto;
}

.table-fixed {
  table-layout: fixed;
}

.caption-top {
  caption-side: top;
}

.caption-bottom {
  caption-side: bottom;
}

.border-collapse {
  border-collapse: collapse;
}

.border-separate {
  border-collapse: separate;
}

.\!transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-cpu {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu {
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-none {
  transform: none;
}

.touch-auto {
  touch-action: auto;
}

.touch-none {
  touch-action: none;
}

.touch-pan-x {
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-left {
  --tw-pan-x: pan-left;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-right {
  --tw-pan-x: pan-right;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-y {
  --tw-pan-y: pan-y;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-up {
  --tw-pan-y: pan-up;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-down {
  --tw-pan-y: pan-down;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pinch-zoom {
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-manipulation {
  touch-action: manipulation;
}

.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.select-text {
  -webkit-user-select: text;
  -moz-user-select: text;
  user-select: text;
}

.select-all {
  -webkit-user-select: all;
  -moz-user-select: all;
  user-select: all;
}

.select-auto {
  -webkit-user-select: auto;
  -moz-user-select: auto;
  user-select: auto;
}

.resize-none {
  resize: none;
}

.resize-y {
  resize: vertical;
}

.resize-x {
  resize: horizontal;
}

.resize {
  resize: both;
}

.snap-none {
  scroll-snap-type: none;
}

.snap-x {
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}

.snap-y {
  scroll-snap-type: y var(--tw-scroll-snap-strictness);
}

.snap-both {
  scroll-snap-type: both var(--tw-scroll-snap-strictness);
}

.snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}

.snap-proximity {
  --tw-scroll-snap-strictness: proximity;
}

.snap-start {
  scroll-snap-align: start;
}

.snap-end {
  scroll-snap-align: end;
}

.snap-center {
  scroll-snap-align: center;
}

.snap-align-none {
  scroll-snap-align: none;
}

.snap-normal {
  scroll-snap-stop: normal;
}

.snap-always {
  scroll-snap-stop: always;
}

.list-inside {
  list-style-position: inside;
}

.list-outside {
  list-style-position: outside;
}

.appearance-none {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.appearance-auto {
  -webkit-appearance: auto;
  -moz-appearance: auto;
  appearance: auto;
}

.break-before-auto {
  -moz-column-break-before: auto;
  break-before: auto;
}

.break-before-avoid {
  -moz-column-break-before: avoid;
  break-before: avoid;
}

.break-before-all {
  -moz-column-break-before: all;
  break-before: all;
}

.break-before-avoid-page {
  -moz-column-break-before: avoid;
  break-before: avoid-page;
}

.break-before-page {
  -moz-column-break-before: page;
  break-before: page;
}

.break-before-left {
  -moz-column-break-before: left;
  break-before: left;
}

.break-before-right {
  -moz-column-break-before: right;
  break-before: right;
}

.break-before-column {
  -moz-column-break-before: column;
  break-before: column;
}

.break-inside-auto {
  -moz-column-break-inside: auto;
  break-inside: auto;
}

.break-inside-avoid {
  -moz-column-break-inside: avoid;
  break-inside: avoid;
}

.break-inside-avoid-page {
  break-inside: avoid-page;
}

.break-inside-avoid-column {
  -moz-column-break-inside: avoid;
  break-inside: avoid-column;
}

.break-after-auto {
  -moz-column-break-after: auto;
  break-after: auto;
}

.break-after-avoid {
  -moz-column-break-after: avoid;
  break-after: avoid;
}

.break-after-all {
  -moz-column-break-after: all;
  break-after: all;
}

.break-after-avoid-page {
  -moz-column-break-after: avoid;
  break-after: avoid-page;
}

.break-after-page {
  -moz-column-break-after: page;
  break-after: page;
}

.break-after-left {
  -moz-column-break-after: left;
  break-after: left;
}

.break-after-right {
  -moz-column-break-after: right;
  break-after: right;
}

.break-after-column {
  -moz-column-break-after: column;
  break-after: column;
}

.grid-flow-row {
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-flow-dense {
  grid-auto-flow: dense;
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.place-content-center {
  place-content: center;
}

.place-content-start {
  place-content: start;
}

.place-content-end {
  place-content: end;
}

.place-content-between {
  place-content: space-between;
}

.place-content-around {
  place-content: space-around;
}

.place-content-evenly {
  place-content: space-evenly;
}

.place-content-baseline {
  place-content: baseline;
}

.place-content-stretch {
  place-content: stretch;
}

.place-items-start {
  place-items: start;
}

.place-items-end {
  place-items: end;
}

.place-items-center {
  place-items: center;
}

.place-items-baseline {
  place-items: baseline;
}

.place-items-stretch {
  place-items: stretch;
}

.content-normal {
  align-content: normal;
}

.content-center {
  align-content: center;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-between {
  align-content: space-between;
}

.content-around {
  align-content: space-around;
}

.content-evenly {
  align-content: space-evenly;
}

.content-baseline {
  align-content: baseline;
}

.content-stretch {
  align-content: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-7 {
  gap: 1.75rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 1;
}

.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 1;
}

.divide-solid > :not([hidden]) ~ :not([hidden]) {
  border-style: solid;
}

.divide-dashed > :not([hidden]) ~ :not([hidden]) {
  border-style: dashed;
}

.divide-dotted > :not([hidden]) ~ :not([hidden]) {
  border-style: dotted;
}

.divide-double > :not([hidden]) ~ :not([hidden]) {
  border-style: double;
}

.divide-none > :not([hidden]) ~ :not([hidden]) {
  border-style: none;
}

.place-self-auto {
  place-self: auto;
}

.place-self-start {
  place-self: start;
}

.place-self-end {
  place-self: end;
}

.place-self-center {
  place-self: center;
}

.place-self-stretch {
  place-self: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

.justify-self-auto {
  justify-self: auto;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-clip {
  overflow: clip;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-x-clip {
  overflow-x: clip;
}

.overflow-y-clip {
  overflow-y: clip;
}

.overflow-x-visible {
  overflow-x: visible;
}

.overflow-y-visible {
  overflow-y: visible;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.overscroll-auto {
  overscroll-behavior: auto;
}

.overscroll-contain {
  overscroll-behavior: contain;
}

.overscroll-none {
  overscroll-behavior: none;
}

.overscroll-y-auto {
  overscroll-behavior-y: auto;
}

.overscroll-y-contain {
  overscroll-behavior-y: contain;
}

.overscroll-y-none {
  overscroll-behavior-y: none;
}

.overscroll-x-auto {
  overscroll-behavior-x: auto;
}

.overscroll-x-contain {
  overscroll-behavior-x: contain;
}

.overscroll-x-none {
  overscroll-behavior-x: none;
}

.scroll-auto {
  scroll-behavior: auto;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.text-clip {
  text-overflow: clip;
}

.hyphens-none {
  -webkit-hyphens: none;
  hyphens: none;
}

.hyphens-manual {
  -webkit-hyphens: manual;
  hyphens: manual;
}

.hyphens-auto {
  -webkit-hyphens: auto;
  hyphens: auto;
}

.whitespace-normal {
  white-space: normal;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.whitespace-pre {
  white-space: pre;
}

.whitespace-pre-line {
  white-space: pre-line;
}

.whitespace-pre-wrap {
  white-space: pre-wrap;
}

.whitespace-break-spaces {
  white-space: break-spaces;
}

.text-wrap {
  text-wrap: wrap;
}

.text-nowrap {
  text-wrap: nowrap;
}

.text-balance {
  text-wrap: balance;
}

.text-pretty {
  text-wrap: pretty;
}

.break-normal {
  overflow-wrap: normal;
  word-break: normal;
}

.break-words {
  overflow-wrap: break-word;
}

.break-all {
  word-break: break-all;
}

.break-keep {
  word-break: keep-all;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

.rounded-ee {
  border-end-end-radius: 0.25rem;
}

.rounded-es {
  border-end-start-radius: 0.25rem;
}

.rounded-se {
  border-start-end-radius: 0.25rem;
}

.rounded-ss {
  border-start-start-radius: 0.25rem;
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-x {
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-e {
  border-inline-end-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-s {
  border-inline-start-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-dashed {
  border-style: dashed;
}

.border-dotted {
  border-style: dotted;
}

.border-double {
  border-style: double;
}

.border-hidden {
  border-style: hidden;
}

.border-none {
  border-style: none;
}

.border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity));
}

.bg-\[rgb\(255\2c 0\2c 0\)\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 0 0 / var(--tw-bg-opacity));
}

.bg-black\/60 {
  background-color: rgb(0 0 0 / 0.6);
}

.bg-gray-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: #4cee24;
}


.bg-green-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-zinc-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(24 24 27 / var(--tw-bg-opacity));
}

.bg-home {
  background-image: url("/assets/bg.png");
}

.decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}

.decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

.box-decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}

.box-decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

.bg-cover {
  background-size: cover;
}

.bg-fixed {
  background-attachment: fixed;
}

.bg-local {
  background-attachment: local;
}

.bg-scroll {
  background-attachment: scroll;
}

.bg-clip-border {
  background-clip: border-box;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.bg-clip-content {
  background-clip: content-box;
}

.bg-clip-text {
  -webkit-background-clip: text;
  background-clip: text;
}

.bg-center {
  background-position: center;
}

.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-repeat-x {
  background-repeat: repeat-x;
}

.bg-repeat-y {
  background-repeat: repeat-y;
}

.bg-repeat-round {
  background-repeat: round;
}

.bg-repeat-space {
  background-repeat: space;
}

.bg-origin-border {
  background-origin: border-box;
}

.bg-origin-padding {
  background-origin: padding-box;
}

.bg-origin-content {
  background-origin: content-box;
}

.object-contain {
  -o-object-fit: contain;
  object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
  object-fit: cover;
}

.object-fill {
  -o-object-fit: fill;
  object-fit: fill;
}

.object-none {
  -o-object-fit: none;
  object-fit: none;
}

.object-scale-down {
  -o-object-fit: scale-down;
  object-fit: scale-down;
}

.p-1 {
  padding: 0.25rem;
}

.p-5 {
  padding: 1.25rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-start {
  text-align: start;
}

.text-end {
  text-align: end;
}

.align-baseline {
  vertical-align: baseline;
}

.align-top {
  vertical-align: top;
}

.align-middle {
  vertical-align: middle;
}

.align-bottom {
  vertical-align: bottom;
}

.align-text-top {
  vertical-align: text-top;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.align-sub {
  vertical-align: sub;
}

.align-super {
  vertical-align: super;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.italic {
  font-style: italic;
}

.not-italic {
  font-style: normal;
}

.normal-nums {
  font-variant-numeric: normal;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
    var(--tw-numeric-figure) var(--tw-numeric-spacing)
    var(--tw-numeric-fraction);
}

.text-\[\#336699\]\/\[\.35\] {
  color: rgb(51 102 153 / 0.35);
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.decoration-solid {
  text-decoration-style: solid;
}

.decoration-double {
  text-decoration-style: double;
}

.decoration-dotted {
  text-decoration-style: dotted;
}

.decoration-dashed {
  text-decoration-style: dashed;
}

.decoration-wavy {
  text-decoration-style: wavy;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.bg-blend-normal {
  background-blend-mode: normal;
}

.bg-blend-multiply {
  background-blend-mode: multiply;
}

.bg-blend-screen {
  background-blend-mode: screen;
}

.bg-blend-overlay {
  background-blend-mode: overlay;
}

.bg-blend-darken {
  background-blend-mode: darken;
}

.bg-blend-lighten {
  background-blend-mode: lighten;
}

.bg-blend-color-dodge {
  background-blend-mode: color-dodge;
}

.bg-blend-color-burn {
  background-blend-mode: color-burn;
}

.bg-blend-hard-light {
  background-blend-mode: hard-light;
}

.bg-blend-soft-light {
  background-blend-mode: soft-light;
}

.bg-blend-difference {
  background-blend-mode: difference;
}

.bg-blend-exclusion {
  background-blend-mode: exclusion;
}

.bg-blend-hue {
  background-blend-mode: hue;
}

.bg-blend-saturation {
  background-blend-mode: saturation;
}

.bg-blend-color {
  background-blend-mode: color;
}

.bg-blend-luminosity {
  background-blend-mode: luminosity;
}

.mix-blend-normal {
  mix-blend-mode: normal;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.mix-blend-screen {
  mix-blend-mode: screen;
}

.mix-blend-overlay {
  mix-blend-mode: overlay;
}

.mix-blend-darken {
  mix-blend-mode: darken;
}

.mix-blend-lighten {
  mix-blend-mode: lighten;
}

.mix-blend-color-dodge {
  mix-blend-mode: color-dodge;
}

.mix-blend-color-burn {
  mix-blend-mode: color-burn;
}

.mix-blend-hard-light {
  mix-blend-mode: hard-light;
}

.mix-blend-soft-light {
  mix-blend-mode: soft-light;
}

.mix-blend-difference {
  mix-blend-mode: difference;
}

.mix-blend-exclusion {
  mix-blend-mode: exclusion;
}

.mix-blend-hue {
  mix-blend-mode: hue;
}

.mix-blend-saturation {
  mix-blend-mode: saturation;
}

.mix-blend-color {
  mix-blend-mode: color;
}

.mix-blend-luminosity {
  mix-blend-mode: luminosity;
}

.mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}

.mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}

.\!shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1) !important;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-dashed {
  outline-style: dashed;
}

.outline-dotted {
  outline-style: dotted;
}

.outline-double {
  outline-style: double;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
  --tw-ring-inset: inset;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
    drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.filter-none {
  filter: none;
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}

.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}

.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}

.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}

.backdrop-filter-none {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
}

.transition {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.contain-none {
  contain: none;
}

.contain-content {
  contain: content;
}

.contain-strict {
  contain: strict;
}

.contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size) var(--tw-contain-layout)
    var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size) var(--tw-contain-layout)
    var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size) var(--tw-contain-layout)
    var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size) var(--tw-contain-layout)
    var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size) var(--tw-contain-layout)
    var(--tw-contain-paint) var(--tw-contain-style);
}

.content-\[\'this-is-also-valid\]-weirdly-enough\'\] {
  --tw-content: "this-is-also-valid]-weirdly-enough";
  content: var(--tw-content);
}

.forced-color-adjust-auto {
  forced-color-adjust: auto;
}

.forced-color-adjust-none {
  forced-color-adjust: none;
}

body {
  background-color: #f6f7f8;
}

@media (min-width: 640px) {
  .sm\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .sm\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .sm\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .sm\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .sm\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .sm\:container {
      max-width: 1536px;
    }
  }
}

.hover\:-rotate-2:hover {
  --tw-rotate: -2deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:font-bold:hover {
  font-weight: 700;
}

.before\:hover\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.hover\:before\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.focus\:hover\:text-center:hover:focus {
  text-align: center;
}

.hover\:focus\:text-center:focus:hover {
  text-align: center;
}

@media (min-width: 640px) {
  .sm\:underline {
    text-decoration-line: underline;
  }
}

@media (min-width: 768px) {
  .md\:min-w-\[600px\] {
    min-width: 600px;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:gap-10 {
    gap: 2.5rem;
  }

  .md\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

@media (prefers-color-scheme: dark) {
  @media (min-width: 1024px) {
    .dark\:lg\:hover\:\[paint-order\:markers\]:hover {
      paint-order: markers;
    }
  }
}


/* Aqui inicia o css manual*/
/* Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Mitr:wght@200;300;400;500;600;700&family=Righteous&display=swap");

* {
  margin: 0;
  padding: 0;
  scroll-behavior: smooth;
  box-sizing: border-box;
  scroll-padding-top: 3rem;
  font-family: var(--font-family-1);
}

:root {
  --brown: #4b1204;
  --green: #02ff02;
  --yellow-color: #ffa10a;
  --text-color: #121212;
  --conteiner-color: #efe8e0;
  --red: #a72e1b;
  --bg-color: #fff;
  --text-alter-color: #94908e;
  --font-family-1: "Mitr", sans-serif;
  --font-family-2: "Righteous", sans-serif;
}

body {
  color: var(--text-color);
  background: var(--bg-color);
}

/* Custom Scroll Bar */
html::-webkit-scrollbar {
  width: 0.5rem;
  background: transparent;
}

html::-webkit-scrollbar-thumb {
  background: var(--red);
}

a {
  text-decoration: none;
}

img {
  width: 100%;
}

section {
  padding: 3rem 0 2rem;
}

.container {
  max-width: 1400px;
  margin: auto;
  width: 100%;
}

header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: var(--red);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  z-index: 5;
}

.nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 24px 0;
}

.logo img {
  width: 75px;
}

.navbar {
  display: flex;
  align-items: center;
  column-gap: 1.5rem;
}

.nav-link {
  font-size: 0.88rem;
  color: var(--bg-color);
  transition: 0.4s all cubic-bezier(0.075, 0.82, 0.165, 1);
  padding: 14px 20px;
  text-decoration: none;
}

.nav-link:hover {
  color: var(--text-alter-color);
  transition: 0.4s all cubic-bezier(0.075, 0.82, 0.165, 1);
}

.dropdown {
  position: flex; /* Necessário para o dropdown */
}
.dropdown-content {
  display: none;
  position: absolute; /* Faz com que o dropdown fique em relação ao seu pai */
  top: 75px; /* Ajuste este valor para mover o dropdown mais para baixo */
  background-color: rgba(27, 25, 25, 0.925);
  min-width: 100px; /* Largura mínima do dropdown */
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  border-radius: 10px;
  z-index: 2; /* Garante que o dropdown esteja acima dos outros elementos */
}
.dropdown:hover .dropdown-content {
  display: block; /* Mostra o dropdown ao passar o mouse */
}
.dropdown-content a {
  color: var(--bg-color);
  padding: 12px 16px; /* Espaçamento nos itens do dropdown */
  text-decoration: none;
  display: block;
  text-align: center;
}
.dropdown-content a:hover {
  background-color: var(--yellow-color); /* Cor ao passar o mouse */
}

#cart-btn {
    padding: 3px 6px; /* reduzido para um espaço menor */
    font-size: 14px; /* tamanho da fonte menor */
    width: 160px; /* largura menor */
    height: 50px; /* altura menor */
    text-align: center;
    background-color: var(--green);
}

#cart-btn .fa {
    font-size: 14px; /* tamanho do ícone reduzido */
    }


.nav-icons {
  display: flex;
  align-items: center;
  column-gap: 2rem;
}

.nav-icons .bx {
  color: var(--bg-color);
  font-size: 30px;
}

.cart {
  position: relative;
}

.cart span {
  position: absolute;
  right: -10px;
  top: -10px;
  background: var(--text-color);
  font-size: 10px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  color: var(--bg-color);
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: sans-serif;
}

.menu-icon {
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  row-gap: 5px;
  cursor: pointer;
  z-index: 200;
  transition: 0.3s;
}

.menu-icon div {
  display: block;
  background: var(--bg-color);
  height: 2px;
  width: 23px;
  transition: 0.3s;
}

.move .line1 {
  transform: rotate(-45deg) translate(-5px, 5px);
}

.move .line2 {
  opacity: 0;
}

.move .line3 {
  transform: rotate(45deg) translate(-5px, -5px);
}

.home {
  min-height: 650px;
  background: var(--yellow-color);
  position: relative;
  padding: 7rem 0 2rem;
}

.home-content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  align-items: center;
  gap: 1.5rem;
  color: var(--bg-color);
}

.home-text {
  z-index: 4;
}

.home-text h1 {
  font-family: var(--font-family-2);
  font-size: 6.2rem;
  line-height: 6.8rem;
  font-weight: 800;
}

.home-text p {
  font-size: 1.025rem;
  margin: 2rem 0 1rem;
}

.home-text h3 {
  font-size: 2.7rem;
  line-height: 2.7rem;
  font-weight: 500;
  margin-bottom: 2rem;
}

.btn {
  max-width: 160px;
  padding: 15px 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
  background: var(--yellow-color);
  color: var(--bg-color);
  cursor: pointer;
}

.btn:hover {
  background: var(--text-color);
  transition: 0.4s all cubic-bezier(0.075, 0.82, 0.165, 1);
}

#date-span {  
  padding: 0.25rem 1rem; /* px-4 py-1 */
  border-radius: 0.5rem; /* rounded-lg */
  margin-top: 1.25rem; /* mt-5 */
  color: white; /* Para garantir que o texto seja visível */
  display: inline-flex;
}

.home-img {
  max-width: 540px;
  width: 100%;
  z-index: 4;
}

.home-mask {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center center;
}

.features {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(auto, 310px));
  justify-content: space-between;
  gap: 1rem;
  padding: 2rem 0;
  border-bottom: 1px solid rgba(18, 18, 18, 0.2);
}

.feature-box {
  display: flex;
  align-items: center;
  gap: 8px;
}

.feature-img {
  width: 50px;
}

.feature-text h3 {
  font-size: 1.4rem;
  font-weight: 500;
}

.heading {
  font-size: 3.5rem;
  font-weight: 500;
  font-family: var(--font-family-2);
  text-align: center;
  margin-bottom: 2rem !important;
}

.feature-menu-content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(auto, 180px));
  justify-content: space-between;
  gap: 2rem;
}

.feature-menu-box {
  text-align: center;
}

.feature-menu-box img {
  max-width: 185px;
  width: 100%;
  cursor: pointer;
  transition: transform 0.5s ease;
}

.feature-menu-box img:hover {
  transform: scale(1.1);
  transition: transform 0.5s ease;
}

.feature-menu-box h3 {
  font-family: var(--font-family-2);
}

.feature-menu-box p {
  color: var(--text-color);
  opacity: 0.7;
}

.items {
  background: var(--conteiner-color);
}

.item-content {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1.5rem;
}

.item-box {
  position: relative;
  background: var(--bg-color);
  padding: 24px 14px;
  border-radius: 8px;
  border: 1px solid rgba(75, 18, 4, 0.1);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

.item-box .sale {
  position: absolute;
  right: 14px;
  top: 14px;
  background: var(--text-color);
  color: var(--bg-color);
  font-size: 12px;
  padding: 2px 8px;
  border-radius: 4px;
}

.item-box img {
  max-width: 264px;
  width: 100%;
  object-position: center;
  margin-bottom: 1.2rem;
}

.item-box h2 {
  font-size: 1.4rem;
  font-weight: 600;
  color: var(--brown);
}

.item-box .price {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 1.2rem;
}

.item-box .price h3 {
  color: var(--brown);
  font-weight: 500;
}

.item-box .price p {
  text-decoration: line-through;
  font-weight: 500;
  color: rgba(var(--brown), 0.8);
}

.item-btn {
  background: var(--yellow-color);
  color: var(--brown);
  font-weight: 500;
  padding: 10px 15px;
  border-radius: 8px;
}

.item-btn:hover {
  background: var(--green);
  color: var(--bg-color);
  transition: background 0.4s ease-in-out;
}

.menu-container {
  background: var(--text-color);
  color: var(--bg-color);
  position: relative;
  padding: 4rem 0;
}

.menu-mask {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.menu-content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
}

.menu-box {
  z-index: 4;
}

.menu-box h2 {
  font-size: 2.4rem;
  font-weight: 500;
  color: var(--yellow-color);
  font-family: var(--font-family-2);
  margin-bottom: 1.8rem;
}

.m-item-box {
  display: grid;
  grid-template-columns: 82px 1fr;
  align-items: center;
  border-top: 1px dashed #ffffff7c;
  gap: 10px;
  cursor: pointer;
  padding: 10px;
}

.m-item-box:hover {
  background: var(--yellow-color);
  transition: background 0.3s ease-in-out;
}

.burgers-content:last-child,
.bbq-content:last-child {
  border-bottom: 1px dashed #ffffff7c;
}

.m-item-box img {
  max-width: 82px;
  border-radius: 10px;
}

.m-item-right {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.m-item-des {
  padding: 0 16px 0 8px;
}

.m-item-des h3 {
  font-size: 1.075rem;
  font-weight: 500;
  text-align: center;
}

.m-item-box p {
  font-size: 0.94rem;
  color: rgba(255 255 255 / 70%);
  margin-top: 4px;
}

.m-item-price {
  padding-left: 15px;
  border-left: 1px dashed #ffffff7c;
}

.m-item-price h3 {
  font-size: 1.075rem;
  font-weight: 500;
  text-align: center;
}

.m-item-price p {
  font-weight: 400;
  color: rgba(255 255 255 / 70%);
  text-decoration: line-through;
  margin-top: 7px;
}

.footer {
  background: var(
    --text-color
  ); /* Define a cor de fundo do footer usando uma variável CSS */
  color: var(--bg-color); /* Define a cor do texto usando uma variável CSS */
}

.footer-content {
  display: grid; /* Utiliza o layout de grid para organizar o conteúdo */
  grid-template-columns: repeat(4, 1fr); /* Cria 4 colunas de largura igual */
  gap: 1rem; /* Define o espaço entre os itens do grid */
  padding: 40px 0 30px; /* Define o espaçamento interno (padding) acima e abaixo */
}

.footer-logo {
  margin-bottom: 10px; /* Adiciona espaço abaixo do logo */
}

.footer-logo img {
  width: 80px; /* Define a largura da imagem do logo */
}

.footer-box {
  display: flex; /* Utiliza o layout flexível para organizar os itens dentro da caixa */
  flex-direction: column; /* Organiza os itens na direção vertical */
}

.social {
  display: flex; /* Utiliza o layout flexível para os ícones sociais */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  margin-top: 1rem; /* Adiciona espaço acima do bloco social */
}

.social a .bx {
  font-size: 20px; /* Define o tamanho da fonte para o ícone */
  background: var(
    --yellow-color
  ); /* Define a cor de fundo dos ícones sociais */
  color: var(--bg-color); /* Define a cor do ícone */
  border-radius: 50%; /* Torna os ícones circulares */
  padding: 10px; /* Adiciona espaçamento interno ao redor do ícone */
  margin-right: 0.8rem; /* Adiciona espaço à direita dos ícones */
}

.social a .bx:hover {
  color: var(--text-color); /* Altera a cor do ícone ao passar o mouse */
  background: var(--bg-color); /* Altera a cor de fundo ao passar o mouse */
  transition: background 0.4s ease-in-out; /* Anima a transição da cor de fundo */
}

.footer-box h3 {
  font-size: 1.2rem; /* Define o tamanho da fonte para os títulos das caixas */
  font-weight: 500; /* Define a espessura da fonte como semi-negrito */
  color: var(--bg-color); /* Define a cor do texto do título */
  margin-bottom: 1rem; /* Adiciona espaço abaixo do título */
}

.footer-box p {
  margin-bottom: 8px; /* Adiciona espaço abaixo dos parágrafos */
}

.footer-box p Span {
  display: inline-block; /* Torna o span um bloco em linha, permitindo definir largura */
  width: 50px; /* Define a largura do span */
}

.footer-box a {
  color: var(--bg-color); /* Define a cor dos links dentro da caixa */
  margin-bottom: 10px; /* Adiciona espaço abaixo dos links */
}

.copyright {
  padding: 10px; /* Define o espaçamento interno do bloco de copyright */
  color: var(--bg-color); /* Define a cor do texto de copyright */
  text-align: center; /* Centraliza o texto de copyright */
}

/* Making Responsive */
@media (max-width: 1410px) {
  .container {
    width: 90%;
    margin: 0 auto;
  }

  .features {
    border-bottom: none;
  }

  .feature-box {
    border-bottom: 1px solid rgb(18 18 18 / 20%);
    padding-bottom: 12px;
  }
}

@media (max-width: 1195px) {
  .home-text h1 {
    font-size: 4.2rem;
    line-height: 4.8rem;
  }

  .home-text h3 {
    font-size: 2rem;
    line-height: 2rem;
    font-weight: 400;
  }
}

@media (max-width: 975px) {
  .heading {
    font-size: 2.8rem;
  }

  .item-content {
    grid-template-columns: repeat(3, 1fr);
  }

  .menu-content {
    grid-template-columns: 1fr;
  }

  .menu-box h2 {
    font-size: 1.7rem;
  }

  .newsletter h2 {
    font-size: 2.4rem;
  }

  .footer-content {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 820px) {
  section {
    padding: 2rem 0;
  }

  .nav {
    padding: 16px 0;
  }

  .logo img {
    width: 60px;
  }

  .menu-icon {
    display: flex;
  }

  .navbar {
    position: absolute;
    top: 0%;
    right: 0;
    width: 320px;
    height: 100vh;
    background: var(--red);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px 0;
    z-index: 4;
    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
    transition: 0.5s all cubic-bezier(0.075, 0.82, 0.165, 1);
  }

  .open-menu {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    transition: 0.5s all cubic-bezier(0.075, 0.82, 0.165, 1);
  }

  .nav-link {
    display: block;
    margin: 1rem 0;
  }

  .home-content {
    grid-template-columns: 1fr;
    justify-items: center;
  }

  .home-text {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .home-text p {
    margin: 1rem 0;
  }

  .btn {
    padding: 14px 24px;
  }

  .item-content {
    text-align: center;
  }

  .item-box h2 {
    line-height: 1.5rem;
  }

  .item-box .price {
    flex-direction: column;
    gap: 0px;
    margin: 1rem 0;
  }
}

@media (max-width: 670px) {
  .home-text h1 {
    font-size: 2.7rem;
    line-height: 3.2rem;
  }

  .features {
    justify-content: center;
  }

  .item-content {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .footer-content {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 390px) {
  .navbar {
    width: 100%;
  }

  .feature-menu-content {
    justify-content: center;
  }

  .menu-box h2 {
    text-align: center;
  }

  .m-item-right {
    flex-direction: column;
    align-items: flex-start;
  }

  .m-item-box {
    align-items: flex-start;
    gap: 1rem;
  }

  .m-item-des {
    padding: 0;
  }

  .m-item-des p {
    line-height: 1.1rem;
  }

  .m-item-price {
    padding-left: 0;
    border-left: none;
    margin-top: 7px;
  }

  .m-item-price p {
    margin-top: 4px;
  }
}


